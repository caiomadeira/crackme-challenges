                             //
                             // segment_2.1 
                             // Loadable segment  [0x0 - 0x60f]
                             // ram:00100000-ram:001002a7
                             //
             assume DF = 0x0  (Default)
        00100000 7f 45 4c        Elf64_Ehdr
                 46 02 01 
                 01 00 00 
           00100000 7f              db        7Fh                     e_ident_magi
           00100001 45 4c 46        ds        "ELF"                   e_ident_magi
           00100004 02              db        2h                      e_ident_class
           00100005 01              db        1h                      e_ident_data
           00100006 01              db        1h                      e_ident_vers
           00100007 00              db        0h                      e_ident_osabi
           00100008 00              db        0h                      e_ident_abiv
           00100009 00 00 00 00 00  db[7]                             e_ident_pad
                    00 00
           00100010 03 00           dw        3h                      e_type
           00100012 3e 00           dw        3Eh                     e_machine
           00100014 01 00 00 00     ddw       1h                      e_version
           00100018 80 10 00 00 00  dq        _start                  e_entry
                    00 00 00
           00100020 40 00 00 00 00  dq        Elf64_Phdr_ARRAY_00100  e_phoff
                    00 00 00
           00100028 18 3a 00 00 00  dq        Elf64_Shdr_ARRAY__elfS  e_shoff
                    00 00 00
           00100030 00 00 00 00     ddw       0h                      e_flags
           00100034 40 00           dw        40h                     e_ehsize
           00100036 38 00           dw        38h                     e_phentsize
           00100038 0b 00           dw        Bh                      e_phnum
           0010003a 40 00           dw        40h                     e_shentsize
           0010003c 1e 00           dw        1Eh                     e_shnum
           0010003e 1d 00           dw        1Dh                     e_shstrndx
                             Elf64_Phdr_ARRAY_00100040                       XREF[2]:     00100020(*), 00100050(*)  
        00100040 06 00 00        Elf64_Ph                                                    PT_PHDR - Program header table
                 00 04 00 
                 00 00 40 
                             //
                             // .interp 
                             // SHT_PROGBITS  [0x2a8 - 0x2c3]
                             // ram:001002a8-ram:001002c3
                             //
                             s_/lib64/ld-linux-x86-64.so.2_001002a8          XREF[2]:     00100088(*), 
                                                                                          _elfSectionHeaders::00000050(*)  
        001002a8 2f 6c 69        ds         "/lib64/ld-linux-x86-64.so.2"                    Initial Elf program interpreter
                 62 36 34 
                 2f 6c 64 
                             //
                             // .note.ABI-tag 
                             // SHT_NOTE  [0x2c4 - 0x2e3]
                             // ram:001002c4-ram:001002e3
                             //
                             NoteAbiTag_001002c4                             XREF[2]:     001001d8(*), 
                                                                                          _elfSectionHeaders::00000090(*)  
        001002c4 04 00 00        NoteAbiTag                                                  Length of name field
                 00 10 00 
                 00 00 01 
                             //
                             // .note.gnu.build-id 
                             // SHT_NOTE  [0x2e4 - 0x307]
                             // ram:001002e4-ram:00100307
                             //
                             GnuBuildId_001002e4                             XREF[1]:     _elfSectionHeaders::000000d0(*)  
        001002e4 04 00 00        GnuBuildId                                                  Length of name field
                 00 14 00 
                 00 00 03 
                             //
                             // .gnu.hash 
                             // SHT_GNU_HASH  [0x308 - 0x32b]
                             // ram:00100308-ram:0010032b
                             //
                             __DT_GNU_HASH                                   XREF[2]:     00103e70(*), 
                                                                                          _elfSectionHeaders::00000110(*)  
        00100308 02 00 00 00     ddw        2h                                               GNU Hash Table - nbucket
        0010030c 09 00 00 00     ddw        9h                                               GNU Hash Table - symbase
        00100310 01 00 00 00     ddw        1h                                               GNU Hash Table - bloom_size
        00100314 06 00 00 00     ddw        6h                                               GNU Hash Table - bloom_shift
        00100318 00 00 81        dq[1]                                                       GNU Hash Table - bloom
                 00 00 00 
                 00 00
        00100320 09 00 00        ddw[2]                                                      GNU Hash Table - buckets
                 00 00 00 
                 00 00
        00100328 d1 65 ce 6d     ddw[1]                                                      GNU Hash Table - chain
                             //
                             // .dynsym 
                             // SHT_DYNSYM  [0x330 - 0x41f]
                             // ram:00100330-ram:0010041f
                             //
                             __DT_SYMTAB                                     XREF[2]:     00103e90(*), 
                                                                                          _elfSectionHeaders::00000150(*)  
        00100330 00 00 00        Elf64_Sy
                 00 00 00 
                 00 00 00 
                             //
                             // .dynstr 
                             // SHT_STRTAB  [0x420 - 0x4b4]
                             // ram:00100420-ram:001004b4
                             //
                             __DT_STRTAB                                     XREF[2]:     00103e80(*), 
                                                                                          _elfSectionHeaders::00000190(*)  
        00100420 00              ??         00h
        00100421 6c 69 62        utf8       u8"libc.so.6"
                 63 2e 73 
                 6f 2e 36 00
        0010042b 65 78 69        utf8       u8"exit"
                 74 00
        00100430 70 75 74        utf8       u8"puts"
                 73 00
        00100435 70 72 69        utf8       u8"printf"
                 6e 74 66 00
        0010043c 73 74 72        utf8       u8"strlen"
                 6c 65 6e 00
        00100443 5f 5f 63        utf8       u8"__cxa_finalize"
                 78 61 5f 
                 66 69 6e 
        00100452 5f 5f 6c        utf8       u8"__libc_start_main"
                 69 62 63 
                 5f 73 74 
        00100464 47 4c 49        utf8       u8"GLIBC_2.2.5"
                 42 43 5f 
                 32 2e 32 
        00100470 5f 49 54        utf8       u8"_ITM_deregisterTMCloneTable"
                 4d 5f 64 
                 65 72 65 
        0010048c 5f 5f 67        utf8       u8"__gmon_start__"
                 6d 6f 6e 
                 5f 73 74 
        0010049b 5f 49 54        utf8       u8"_ITM_registerTMCloneTable"
                 4d 5f 72 
                 65 67 69 
                             //
                             // .gnu.version 
                             // SHT_GNU_versym  [0x4b6 - 0x4c9]
                             // ram:001004b6-ram:001004c9
                             //
                             __DT_VERSYM                                     XREF[2]:     00103f70(*), 
                                                                                          _elfSectionHeaders::000001d0(*)  
        001004b6 00 00           dw         0h                                               0
        001004b8 00 00           dw         0h                                               _ITM_deregisterTMCloneTable
        001004ba 02 00           dw         2h                                               puts
        001004bc 02 00           dw         2h                                               strlen
        001004be 02 00           dw         2h                                               printf
        001004c0 02 00           dw         2h                                               __libc_start_main
        001004c2 00 00           dw         0h                                               __gmon_start__
        001004c4 02 00           dw         2h                                               exit
        001004c6 00 00           dw         0h                                               _ITM_registerTMCloneTable
        001004c8 02 00           dw         2h                                               __cxa_finalize
                             //
                             // .gnu.version_r 
                             // SHT_GNU_verneed  [0x4d0 - 0x4ef]
                             // ram:001004d0-ram:001004ef
                             //
                             __DT_VERNEED                                    XREF[2]:     00103f50(*), 
                                                                                          _elfSectionHeaders::00000210(*)  
        001004d0 01              ??         01h
        001004d1 00              ??         00h
        001004d2 01              ??         01h
        001004d3 00              ??         00h
        001004d4 01              ??         01h
        001004d5 00              ??         00h
        001004d6 00              ??         00h                                              ?  ->  00100000
        001004d7 00              ??         00h
        001004d8 10              ??         10h
        001004d9 00              ??         00h
        001004da 00              ??         00h
        001004db 00              ??         00h
        001004dc 00              ??         00h
        001004dd 00              ??         00h
        001004de 00              ??         00h
        001004df 00              ??         00h
        001004e0 75              ??         75h    u
        001004e1 1a              ??         1Ah
        001004e2 69              ??         69h    i
        001004e3 09              ??         09h
        001004e4 00              ??         00h
        001004e5 00              ??         00h
        001004e6 02              ??         02h
        001004e7 00              ??         00h
        001004e8 44              ??         44h    D
        001004e9 00              ??         00h
        001004ea 00              ??         00h
        001004eb 00              ??         00h
        001004ec 00              ??         00h
        001004ed 00              ??         00h
        001004ee 00              ??         00h
        001004ef 00              ??         00h
                             //
                             // .rela.dyn 
                             // SHT_RELA  [0x4f0 - 0x5af]
                             // ram:001004f0-ram:001005af
                             //
                             __DT_RELA                                       XREF[2]:     00103f10(*), 
                                                                                          _elfSectionHeaders::00000250(*)  
        001004f0 e8 3d 00        Elf64_Re                                                    location to apply the relocation
                 00 00 00 
                 00 00 08 
                             //
                             // .rela.plt 
                             // SHT_RELA  [0x5b0 - 0x60f]
                             // ram:001005b0-ram:0010060f
                             //
                             __DT_JMPREL                                     XREF[2]:     00103f00(*), 
                                                                                          _elfSectionHeaders::00000290(*)  
        001005b0 18 40 00        Elf64_Re                                                    location to apply the relocation
                 00 00 00 
                 00 00 07 
                             //
                             // .init 
                             // SHT_PROGBITS  [0x1000 - 0x1016]
                             // ram:00101000-ram:00101016
                             //
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             int __stdcall _init(EVP_PKEY_CTX * ctx)
             int               EAX:4          <RETURN>
             EVP_PKEY_CTX *    RDI:8          ctx
                             __DT_INIT                                       XREF[5]:     Entry Point(*), 001000f8(*), 
                             _init                                                        __libc_csu_init:0010129c(c), 
                                                                                          00103e10(*), 
                                                                                          _elfSectionHeaders::000002d0(*)  
        00101000 48 83 ec 08     SUB        RSP,0x8
        00101004 48 8b 05        MOV        RAX=><EXTERNAL>::__gmon_start__,qword ptr [-><   = ??
                 dd 2f 00 00                                                                 = 00105028
        0010100b 48 85 c0        TEST       RAX,RAX
        0010100e 74 02           JZ         LAB_00101012
        00101010 ff d0           CALL       RAX=><EXTERNAL>::__gmon_start__                  undefined __gmon_start__()
                             LAB_00101012                                    XREF[1]:     0010100e(j)  
        00101012 48 83 c4 08     ADD        RSP,0x8
        00101016 c3              RET
                             //
                             // .plt 
                             // SHT_PROGBITS  [0x1020 - 0x106f]
                             // ram:00101020-ram:0010106f
                             //
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined FUN_00101020()
             undefined         AL:1           <RETURN>
                             FUN_00101020                                    XREF[7]:     0010103b(c), 0010104b(c), 
                                                                                          0010105b(c), 0010106b(c), 
                                                                                          00102048, 001020d0(*), 
                                                                                          _elfSectionHeaders::00000310(*)  
        00101020 ff 35 e2        PUSH       qword ptr [PTR_00104008]                         = 00000000
                 2f 00 00
        00101026 ff 25 e4        JMP        qword ptr [PTR_00104010]
                 2f 00 00
        0010102c 0f              ??         0Fh
        0010102d 1f              ??         1Fh
        0010102e 40              ??         40h    @
        0010102f 00              ??         00h
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk int puts(char * __s)
                               Thunked-Function: <EXTERNAL>::puts
             int               EAX:4          <RETURN>
             char *            RDI:8          __s
                             <EXTERNAL>::puts                                XREF[2]:     usage:001011b5(c), 
                                                                                          main:0010120f(c)  
        00101030 ff 25 e2        JMP        qword ptr [-><EXTERNAL>::puts]                   int puts(char * __s)
                 2f 00 00
                             -- Flow Override: CALL_RETURN (COMPUTED_CALL_TERMINATOR)
        00101036 68 00 00        PUSH       0x0
                 00 00
        0010103b e9 e0 ff        JMP        FUN_00101020                                     undefined FUN_00101020()
                 ff ff
                             -- Flow Override: CALL_RETURN (CALL_TERMINATOR)
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk size_t strlen(char * __s)
                               Thunked-Function: <EXTERNAL>::strlen
             size_t            RAX:8          <RETURN>
             char *            RDI:8          __s
                             <EXTERNAL>::strlen                              XREF[1]:     main:001011e7(c)  
        00101040 ff 25 da        JMP        qword ptr [-><EXTERNAL>::strlen]                 size_t strlen(char * __s)
                 2f 00 00
                             -- Flow Override: CALL_RETURN (COMPUTED_CALL_TERMINATOR)
        00101046 68 01 00        PUSH       0x1
                 00 00
        0010104b e9 d0 ff        JMP        FUN_00101020                                     undefined FUN_00101020()
                 ff ff
                             -- Flow Override: CALL_RETURN (CALL_TERMINATOR)
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk int printf(char * __format, ...)
                               Thunked-Function: <EXTERNAL>::printf
             int               EAX:4          <RETURN>
             char *            RDI:8          __format
                             <EXTERNAL>::printf                              XREF[2]:     usage:001011a9(c), 
                                                                                          main:0010122e(c)  
        00101050 ff 25 d2        JMP        qword ptr [-><EXTERNAL>::printf]                 int printf(char * __format, ...)
                 2f 00 00
                             -- Flow Override: CALL_RETURN (COMPUTED_CALL_TERMINATOR)
        00101056 68 02 00        PUSH       0x2
                 00 00
        0010105b e9 c0 ff        JMP        FUN_00101020                                     undefined FUN_00101020()
                 ff ff
                             -- Flow Override: CALL_RETURN (CALL_TERMINATOR)
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk noreturn void exit(int __status)
                               Thunked-Function: <EXTERNAL>::exit
             void              <VOID>         <RETURN>
             int               EDI:4          __status
                             <EXTERNAL>::exit                                XREF[1]:     usage:001011bf(c)  
        00101060 ff 25 ca        JMP        qword ptr [DAT_00104030]                         void exit(int __status)
                 2f 00 00                                                                    -> exit
                             -- Flow Override: CALL_RETURN (COMPUTED_CALL_TERMINATOR)
        00101066 68 03 00        PUSH       0x3
                 00 00
        0010106b e9 b0 ff        JMP        FUN_00101020                                     undefined FUN_00101020()
                 ff ff
                             -- Flow Override: CALL_RETURN (CALL_TERMINATOR)
                             //
                             // .plt.got 
                             // SHT_PROGBITS  [0x1070 - 0x1077]
                             // ram:00101070-ram:00101077
                             //
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk undefined __cxa_finalize()
                               Thunked-Function: <EXTERNAL>::__cxa_final
             undefined         AL:1           <RETURN>
                             <EXTERNAL>::__cxa_finalize                      XREF[4]:     __do_global_dtors_aux:0010115e(c
                                                                                          00102050, 001020f8(*), 
                                                                                          _elfSectionHeaders::00000350(*)  
        00101070 ff 25 82        JMP        qword ptr [-><EXTERNAL>::__cxa_finalize]         undefined __cxa_finalize()
                 2f 00 00
                             -- Flow Override: CALL_RETURN (COMPUTED_CALL_TERMINATOR)
        00101076 66              ??         66h    f
        00101077 90              ??         90h
                             //
                             // .text 
                             // SHT_PROGBITS  [0x1080 - 0x12e1]
                             // ram:00101080-ram:001012e1
                             //
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined processEntry _start(undefined8 param_1, undefi
             undefined         AL:1           <RETURN>
             undefined8        RDX:8          param_1
             undefined8        Stack[0x0]:8   param_2
             undefined8        Stack[-0x10]:8 local_10                                XREF[1]:     0010108e(*)  
                             _start                                          XREF[5]:     Entry Point(*), 00100018(*), 
                                                                                          00102058, 001020a0(*), 
                                                                                          _elfSectionHeaders::00000390(*)  
        00101080 31 ed           XOR        EBP,EBP
        00101082 49 89 d1        MOV        R9,param_1
        00101085 5e              POP        RSI
        00101086 48 89 e2        MOV        param_1,RSP
        00101089 48 83 e4 f0     AND        RSP,-0x10
        0010108d 50              PUSH       RAX
        0010108e 54              PUSH       RSP=>local_10
        0010108f 4c 8d 05        LEA        R8,[__libc_csu_fini]
                 4a 02 00 00
        00101096 48 8d 0d        LEA        RCX,[__libc_csu_init]
                 d3 01 00 00
        0010109d 48 8d 3d        LEA        RDI,[main]
                 20 01 00 00
        001010a4 ff 15 36        CALL       qword ptr [-><EXTERNAL>::__libc_start_main]      undefined __libc_start_main()
                 2f 00 00                                                                    = 00105020
        001010aa f4              HLT
        001010ab 0f              ??         0Fh
        001010ac 1f              ??         1Fh
        001010ad 44              ??         44h    D
        001010ae 00              ??         00h
        001010af 00              ??         00h
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall deregister_tm_clones(void)
             undefined         AL:1           <RETURN>
                             deregister_tm_clones                            XREF[1]:     __do_global_dtors_aux:00101163(c
        001010b0 48 8d 3d        LEA        RDI,[completed.7090]                             = ??
                 91 2f 00 00
        001010b7 55              PUSH       RBP
        001010b8 48 8d 05        LEA        RAX,[completed.7090]                             = ??
                 89 2f 00 00
        001010bf 48 39 f8        CMP        RAX,RDI
        001010c2 48 89 e5        MOV        RBP,RSP
        001010c5 74 19           JZ         LAB_001010e0
        001010c7 48 8b 05        MOV        RAX=><EXTERNAL>::_ITM_deregisterTMCloneTable,q   = ??
                 0a 2f 00 00                                                                 = 00105000
        001010ce 48 85 c0        TEST       RAX,RAX
        001010d1 74 0d           JZ         LAB_001010e0
        001010d3 5d              POP        RBP
        001010d4 ff e0           JMP        RAX=><EXTERNAL>::_ITM_deregisterTMCloneTable     undefined _ITM_deregisterTMClone
                             -- Flow Override: CALL_RETURN (COMPUTED_CALL_TERMINATOR)
        001010d6 66              ??         66h    f
        001010d7 2e              ??         2Eh    .
        001010d8 0f              ??         0Fh
        001010d9 1f              ??         1Fh
        001010da 84              ??         84h
        001010db 00              ??         00h
        001010dc 00              ??         00h
        001010dd 00              ??         00h
        001010de 00              ??         00h
        001010df 00              ??         00h
                             LAB_001010e0                                    XREF[2]:     001010c5(j), 001010d1(j)  
        001010e0 5d              POP        RBP
        001010e1 c3              RET
        001010e2 66              ??         66h    f
        001010e3 66              ??         66h    f
        001010e4 2e              ??         2Eh    .
        001010e5 0f              ??         0Fh
        001010e6 1f              ??         1Fh
        001010e7 84              ??         84h
        001010e8 00              ??         00h
        001010e9 00              ??         00h
        001010ea 00              ??         00h
        001010eb 00              ??         00h
        001010ec 00              ??         00h
        001010ed 0f              ??         0Fh
        001010ee 1f              ??         1Fh
        001010ef 00              ??         00h
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall register_tm_clones(void)
             undefined         AL:1           <RETURN>
                             register_tm_clones                              XREF[1]:     frame_dummy:00101185(c)  
        001010f0 48 8d 3d        LEA        RDI,[completed.7090]                             = ??
                 51 2f 00 00
        001010f7 48 8d 35        LEA        RSI,[completed.7090]                             = ??
                 4a 2f 00 00
        001010fe 55              PUSH       RBP
        001010ff 48 29 fe        SUB        RSI,RDI
        00101102 48 89 e5        MOV        RBP,RSP
        00101105 48 c1 fe 03     SAR        RSI,0x3
        00101109 48 89 f0        MOV        RAX,RSI
        0010110c 48 c1 e8 3f     SHR        RAX,0x3f
        00101110 48 01 c6        ADD        RSI,RAX
        00101113 48 d1 fe        SAR        RSI,0x1
        00101116 74 18           JZ         LAB_00101130
        00101118 48 8b 05        MOV        RAX=><EXTERNAL>::_ITM_registerTMCloneTable,qwo   = ??
                 d1 2e 00 00                                                                 = 00105038
        0010111f 48 85 c0        TEST       RAX,RAX
        00101122 74 0c           JZ         LAB_00101130
        00101124 5d              POP        RBP
        00101125 ff e0           JMP        RAX=><EXTERNAL>::_ITM_registerTMCloneTable       undefined _ITM_registerTMCloneTa
                             -- Flow Override: CALL_RETURN (COMPUTED_CALL_TERMINATOR)
        00101127 66              ??         66h    f
        00101128 0f              ??         0Fh
        00101129 1f              ??         1Fh
        0010112a 84              ??         84h
        0010112b 00              ??         00h
        0010112c 00              ??         00h
        0010112d 00              ??         00h
        0010112e 00              ??         00h
        0010112f 00              ??         00h
                             LAB_00101130                                    XREF[2]:     00101116(j), 00101122(j)  
        00101130 5d              POP        RBP
        00101131 c3              RET
        00101132 66              ??         66h    f
        00101133 66              ??         66h    f
        00101134 2e              ??         2Eh    .
        00101135 0f              ??         0Fh
        00101136 1f              ??         1Fh
        00101137 84              ??         84h
        00101138 00              ??         00h
        00101139 00              ??         00h
        0010113a 00              ??         00h
        0010113b 00              ??         00h
        0010113c 00              ??         00h
        0010113d 0f              ??         0Fh
        0010113e 1f              ??         1Fh
        0010113f 00              ??         00h
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall __do_global_dtors_aux(void)
             undefined         AL:1           <RETURN>
                             __do_global_dtors_aux                           XREF[3]:     Entry Point(*), 
                                                                                          __libc_csu_init:001012b9(c), 
                                                                                          00103df0(*)  
        00101140 80 3d 01        CMP        byte ptr [completed.7090],0x0                    = ??
                 2f 00 00 00
        00101147 75 2f           JNZ        LAB_00101178
        00101149 48 83 3d        CMP        qword ptr [-><EXTERNAL>::__cxa_finalize],0x0     = 00105040
                 a7 2e 00 
                 00 00
        00101151 55              PUSH       RBP
        00101152 48 89 e5        MOV        RBP,RSP
        00101155 74 0c           JZ         LAB_00101163
        00101157 48 8b 3d        MOV        RDI,qword ptr [->__dso_handle]                   = 00104040
                 e2 2e 00 00
        0010115e e8 0d ff        CALL       <EXTERNAL>::__cxa_finalize                       undefined __cxa_finalize()
                 ff ff
                             LAB_00101163                                    XREF[1]:     00101155(j)  
        00101163 e8 48 ff        CALL       deregister_tm_clones                             undefined deregister_tm_clones(v
                 ff ff
        00101168 c6 05 d9        MOV        byte ptr [completed.7090],0x1                    = ??
                 2e 00 00 01
        0010116f 5d              POP        RBP
        00101170 c3              RET
        00101171 0f              ??         0Fh
        00101172 1f              ??         1Fh
        00101173 80              ??         80h
        00101174 00              ??         00h
        00101175 00              ??         00h
        00101176 00              ??         00h
        00101177 00              ??         00h
                             LAB_00101178                                    XREF[1]:     00101147(j)  
        00101178 f3 c3           RET
        0010117a 66              ??         66h    f
        0010117b 0f              ??         0Fh
        0010117c 1f              ??         1Fh
        0010117d 44              ??         44h    D
        0010117e 00              ??         00h
        0010117f 00              ??         00h
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall frame_dummy(void)
             undefined         AL:1           <RETURN>
                             frame_dummy                                     XREF[3]:     Entry Point(*), 
                                                                                          __libc_csu_init:001012b9(c), 
                                                                                          00103de8(*)  
        00101180 55              PUSH       RBP
        00101181 48 89 e5        MOV        RBP,RSP
        00101184 5d              POP        RBP
        00101185 e9 66 ff        JMP        register_tm_clones                               undefined register_tm_clones(void)
                 ff ff
                             -- Flow Override: CALL_RETURN (CALL_TERMINATOR)
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall usage(undefined8 param_1)
             undefined         AL:1           <RETURN>
             undefined8        RDI:8          param_1
             undefined8        Stack[-0x10]:8 local_10                                XREF[2]:     00101192(W), 
                                                                                                   00101196(R)  
                             usage                                           XREF[6]:     Entry Point(*), main:0010123f(c), 
                                                                                          main:00101250(c), 
                                                                                          main:00101261(c), 00102060, 
                                                                                          00102110(*)  
        0010118a 55              PUSH       RBP
        0010118b 48 89 e5        MOV        RBP,RSP
        0010118e 48 83 ec 10     SUB        RSP,0x10
        00101192 48 89 7d f8     MOV        qword ptr [RBP + local_10],param_1
        00101196 48 8b 45 f8     MOV        RAX,qword ptr [RBP + local_10]
        0010119a 48 89 c6        MOV        RSI,RAX
        0010119d 48 8d 3d        LEA        param_1,[s_USAGE:_%s_<password>_00102004]        = "USAGE: %s <password>\n"
                 60 0e 00 00
        001011a4 b8 00 00        MOV        EAX,0x0
                 00 00
        001011a9 e8 a2 fe        CALL       <EXTERNAL>::printf                               int printf(char * __format, ...)
                 ff ff
        001011ae 48 8d 3d        LEA        param_1,[s_try_again!_0010201a]                  = "try again!"
                 65 0e 00 00
        001011b5 e8 76 fe        CALL       <EXTERNAL>::puts                                 int puts(char * __s)
                 ff ff
        001011ba bf 00 00        MOV        param_1,0x0
                 00 00
        001011bf e8 9c fe        CALL       <EXTERNAL>::exit                                 void exit(int __status)
                 ff ff
                             -- Flow Override: CALL_RETURN (CALL_TERMINATOR)
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             int __stdcall main(int argc, char * * argv)
             int               EAX:4          <RETURN>                                XREF[1]:     001011e7(W)  
             int               EDI:4          argc
             char * *          RSI:8          argv
             undefined8        RAX:8          arg1_length                             XREF[1]:     001011e7(W)  
             undefined4        Stack[-0xc]:4  local_c                                 XREF[2]:     001011cc(W), 
                                                                                                   001011d3(R)  
             undefined8        Stack[-0x18]:8 local_18                                XREF[7]:     001011cf(W), 
                                                                                                   001011d9(R), 
                                                                                                   001011f2(R), 
                                                                                                   00101214(R), 
                                                                                                   00101235(R), 
                                                                                                   00101246(R), 
                                                                                                   00101257(R)  
                             main                                            XREF[4]:     Entry Point(*), 
                                                                                          _start:0010109d(*), 00102068, 
                                                                                          0010212c(*)  
        001011c4 55              PUSH       RBP
        001011c5 48 89 e5        MOV        RBP,RSP
        001011c8 48 83 ec 10     SUB        RSP,0x10
        001011cc 89 7d fc        MOV        dword ptr [RBP + local_c],argc
        001011cf 48 89 75 f0     MOV        qword ptr [RBP + local_18],argv
                             CHeck if we have one argument
        001011d3 83 7d fc 02     CMP        dword ptr [RBP + local_c],0x2
        001011d7 75 7e           JNZ        LAB_00101257
        001011d9 48 8b 45 f0     MOV        RAX,qword ptr [RBP + local_18]
        001011dd 48 83 c0 08     ADD        RAX,0x8
        001011e1 48 8b 00        MOV        RAX,qword ptr [RAX]
        001011e4 48 89 c7        MOV        argc,RAX
        001011e7 e8 54 fe        CALL       <EXTERNAL>::strlen                               size_t strlen(char * __s)
                 ff ff
                             Check if argument1 is 10 characters long
        001011ec 48 83 f8 0a     CMP        arg1_length,0xa
        001011f0 75 54           JNZ        LAB_00101246
        001011f2 48 8b 45 f0     MOV        arg1_length,qword ptr [RBP + local_18]
                             Check if 5. (quinto) character in argument1 is an "@" charact
        001011f6 48 83 c0 08     ADD        arg1_length,0x8
        001011fa 48 8b 00        MOV        arg1_length,qword ptr [arg1_length]
        001011fd 48 83 c0 04     ADD        arg1_length,0x4
        00101201 0f b6 00        MOVZX      arg1_length,byte ptr [arg1_length]
        00101204 3c 40           CMP        arg1_length,0x40
        00101206 75 2d           JNZ        LAB_00101235
        00101208 48 8d 3d        LEA        argc,[s_Nice_Job!!_00102025]                     = "Nice Job!!"
                 16 0e 00 00
        0010120f e8 1c fe        CALL       <EXTERNAL>::puts                                 int puts(char * __s)
                 ff ff
        00101214 48 8b 45 f0     MOV        arg1_length,qword ptr [RBP + local_18]
        00101218 48 83 c0 08     ADD        arg1_length,0x8
        0010121c 48 8b 00        MOV        arg1_length,qword ptr [arg1_length]
        0010121f 48 89 c6        MOV        argv,arg1_length
        00101222 48 8d 3d        LEA        argc,[s_flag{%s}_00102030]                       = "flag{%s}\n"
                 07 0e 00 00
        00101229 b8 00 00        MOV        arg1_length,0x0
                 00 00
        0010122e e8 1d fe        CALL       <EXTERNAL>::printf                               int printf(char * __format, ...)
                 ff ff
        00101233 eb 31           JMP        LAB_00101266
                             LAB_00101235                                    XREF[1]:     00101206(j)  
        00101235 48 8b 45 f0     MOV        arg1_length,qword ptr [RBP + local_18]
        00101239 48 8b 00        MOV        arg1_length,qword ptr [arg1_length]
        0010123c 48 89 c7        MOV        argc,arg1_length
        0010123f e8 46 ff        CALL       usage                                            undefined usage(undefined8 param
                 ff ff
        00101244 eb 20           JMP        LAB_00101266
                             LAB_00101246                                    XREF[1]:     001011f0(j)  
        00101246 48 8b 45 f0     MOV        arg1_length,qword ptr [RBP + local_18]
        0010124a 48 8b 00        MOV        arg1_length,qword ptr [arg1_length]
        0010124d 48 89 c7        MOV        argc,arg1_length
        00101250 e8 35 ff        CALL       usage                                            undefined usage(undefined8 param
                 ff ff
        00101255 eb 0f           JMP        LAB_00101266
                             LAB_00101257                                    XREF[1]:     001011d7(j)  
        00101257 48 8b 45 f0     MOV        arg1_length,qword ptr [RBP + local_18]
        0010125b 48 8b 00        MOV        arg1_length,qword ptr [arg1_length]
        0010125e 48 89 c7        MOV        argc,arg1_length
        00101261 e8 24 ff        CALL       usage                                            undefined usage(undefined8 param
                 ff ff
                             LAB_00101266                                    XREF[3]:     00101233(j), 00101244(j), 
                                                                                          00101255(j)  
        00101266 b8 00 00        MOV        arg1_length,0x0
                 00 00
        0010126b c9              LEAVE
        0010126c c3              RET
        0010126d 0f              ??         0Fh
        0010126e 1f              ??         1Fh
        0010126f 00              ??         00h
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall __libc_csu_init(EVP_PKEY_CTX * param
             undefined         AL:1           <RETURN>
             EVP_PKEY_CTX *    RDI:8          param_1
             undefined8        RSI:8          param_2
             undefined8        RDX:8          param_3
                             __libc_csu_init                                 XREF[4]:     Entry Point(*), 
                                                                                          _start:00101096(*), 00102070, 
                                                                                          00102150(*)  
        00101270 41 57           PUSH       R15
        00101272 41 56           PUSH       R14
        00101274 49 89 d7        MOV        R15,param_3
        00101277 41 55           PUSH       R13
        00101279 41 54           PUSH       R12
        0010127b 4c 8d 25        LEA        R12,[__frame_dummy_init_array_entry]             = 00101180
                 66 2b 00 00
        00101282 55              PUSH       RBP
        00101283 48 8d 2d        LEA        RBP,[__do_global_dtors_aux_fini_array_entry]     = 00101140
                 66 2b 00 00
        0010128a 53              PUSH       RBX
        0010128b 41 89 fd        MOV        R13D,param_1
        0010128e 49 89 f6        MOV        R14,param_2
        00101291 4c 29 e5        SUB        RBP,R12
        00101294 48 83 ec 08     SUB        RSP,0x8
        00101298 48 c1 fd 03     SAR        RBP,0x3
        0010129c e8 5f fd        CALL       _init                                            int _init(EVP_PKEY_CTX * ctx)
                 ff ff
        001012a1 48 85 ed        TEST       RBP,RBP
        001012a4 74 20           JZ         LAB_001012c6
        001012a6 31 db           XOR        EBX,EBX
        001012a8 0f 1f 84        NOP        dword ptr [RAX + RAX*0x1]
                 00 00 00 
                 00 00
                             LAB_001012b0                                    XREF[1]:     001012c4(j)  
        001012b0 4c 89 fa        MOV        param_3,R15
        001012b3 4c 89 f6        MOV        param_2,R14
        001012b6 44 89 ef        MOV        param_1,R13D
        001012b9 41 ff 14 dc     CALL       qword ptr [R12 + RBX*0x8]=>->frame_dummy         undefined __do_global_dtors_aux(
                                                                                             undefined frame_dummy(void)
                                                                                             = 00101180
                                                                                             = 00101140
        001012bd 48 83 c3 01     ADD        RBX,0x1
        001012c1 48 39 dd        CMP        RBP,RBX
        001012c4 75 ea           JNZ        LAB_001012b0
                             LAB_001012c6                                    XREF[1]:     001012a4(j)  
        001012c6 48 83 c4 08     ADD        RSP,0x8
        001012ca 5b              POP        RBX
        001012cb 5d              POP        RBP
        001012cc 41 5c           POP        R12
        001012ce 41 5d           POP        R13
        001012d0 41 5e           POP        R14
        001012d2 41 5f           POP        R15
        001012d4 c3              RET
        001012d5 90              ??         90h
        001012d6 66              ??         66h    f
        001012d7 2e              ??         2Eh    .
        001012d8 0f              ??         0Fh
        001012d9 1f              ??         1Fh
        001012da 84              ??         84h
        001012db 00              ??         00h
        001012dc 00              ??         00h
        001012dd 00              ??         00h
        001012de 00              ??         00h
        001012df 00              ??         00h
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall __libc_csu_fini(void)
             undefined         AL:1           <RETURN>
                             __libc_csu_fini                                 XREF[4]:     Entry Point(*), 
                                                                                          _start:0010108f(*), 00102078, 
                                                                                          00102198(*)  
        001012e0 f3 c3           RET
                             //
                             // .fini 
                             // SHT_PROGBITS  [0x12e4 - 0x12ec]
                             // ram:001012e4-ram:001012ec
                             //
                             **************************************************************
                             *                          FUNCTION                          *
                             **************************************************************
                             undefined __stdcall _fini(void)
             undefined         AL:1           <RETURN>
                             __DT_FINI                                       XREF[3]:     Entry Point(*), 00103e20(*), 
                             _fini                                                        _elfSectionHeaders::000003d0(*)  
        001012e4 48 83 ec 08     SUB        RSP,0x8
        001012e8 48 83 c4 08     ADD        RSP,0x8
        001012ec c3              RET
                             //
                             // .rodata 
                             // SHT_PROGBITS  [0x2000 - 0x2039]
                             // ram:00102000-ram:00102039
                             //
                             _IO_stdin_used                                  XREF[3]:     Entry Point(*), 00100130(*), 
                                                                                          _elfSectionHeaders::00000410(*)  
        00102000 01 00 02 00     undefined4 00020001h
                             s_USAGE:_%s_<password>_00102004                 XREF[1]:     usage:0010119d(*)  
        00102004 55 53 41        ds         "USAGE: %s <password>\n"
                 47 45 3a 
                 20 25 73 
                             s_try_again!_0010201a                           XREF[1]:     usage:001011ae(*)  
        0010201a 74 72 79        ds         "try again!"
                 20 61 67 
                 61 69 6e 
                             s_Nice_Job!!_00102025                           XREF[1]:     main:00101208(*)  
        00102025 4e 69 63        ds         "Nice Job!!"
                 65 20 4a 
                 6f 62 21 
                             s_flag{%s}_00102030                             XREF[1]:     main:00101222(*)  
        00102030 66 6c 61        ds         "flag{%s}\n"
                 67 7b 25 
                 73 7d 0a 00
                             //
                             // .eh_frame_hdr 
                             // SHT_PROGBITS  [0x203c - 0x207f]
                             // ram:0010203c-ram:0010207f
                             //
                             **************************************************************
                             * Exception Handler Frame Header                             *
                             **************************************************************
                             __GNU_EH_FRAME_HDR                              XREF[2]:     00100210(*), 
                                                                                          _elfSectionHeaders::00000450(*)  
        0010203c 01 1b 03 3b     eh_frame                                                    Exception Handler Frame Header V
        00102040 40 00 00 00     ddw        cie_00102080                                     Encoded eh_frame_ptr
        00102044 07 00 00 00     ddw        7h                                               Encoded FDE count
                             **************************************************************
                             * Frame Description Entry Table                              *
                             **************************************************************
        00102048 e4 ef ff        fde_tabl                                                    Initial Location
                 ff 8c 00 
                 00 00
        00102050 34 f0 ff        fde_tabl
                 ff b4 00 
                 00 00
           00102050 34 f0 ff ff     ddw       <EXTERNAL>::__cxa_fina  initial_loc   Initial Location
           00102054 b4 00 00 00     ddw       fde_001020f0            data_loc      Data location
        00102058 44 f0 ff        fde_tabl                                                    Initial Location
                 ff 5c 00 
                 00 00
        00102060 4e f1 ff        fde_tabl                                                    Initial Location
                 ff cc 00 
                 00 00
        00102068 88 f1 ff        fde_tabl                                                    Initial Location
                 ff e8 00 
                 00 00
        00102070 34 f2 ff        fde_tabl                                                    Initial Location
                 ff 0c 01 
                 00 00
        00102078 a4 f2 ff        fde_tabl                                                    Initial Location
                 ff 54 01 
                 00 00
                             //
                             // .eh_frame 
                             // SHT_PROGBITS  [0x2080 - 0x21a7]
                             // ram:00102080-ram:001021a7
                             //
                             **************************************************************
                             * Common Information Entry                                   *
                             **************************************************************
                             cie_00102080                                    XREF[3]:     00102040(*), 0010209c(*), 
                                                                                          _elfSectionHeaders::00000490(*)  
        00102080 14 00 00 00     ddw        14h                                              (CIE) Length
        00102084 00 00 00 00     ddw        0h                                               (CIE) ID
        00102088 01              db         1h                                               (CIE) Version
        00102089 7a 52 00        ds         "zR"                                             (CIE) Augmentation String
        0010208c 01              uleb128    1h                                               (CIE) Code Alignment
        0010208d 78              sleb128    -8h                                              (CIE) Data Alignment
        0010208e 10              db         10h                                              (CIE) Return Address Register Co
        0010208f 01              uleb128    1h                                               (CIE) Augmentation Data Length
        00102090 1b              dwfenc     DW_EH_PE_sdata4 | DW_EH_PE_pcrel                 (CIE Augmentation Data) FDE Enco
        00102091 0c 07 08        db[7]                                                       (CIE) Initial Instructions
                 90 01 07 10
                             **************************************************************
                             * Frame Descriptor Entry                                     *
                             **************************************************************
                             fde_00102098                                    XREF[1]:     0010205c(*)  
        00102098 14 00 00 00     ddw        14h                                              (FDE) Length
        0010209c 1c 00 00 00     ddw        cie_00102080                                     (FDE) CIE Reference Pointer 
        001020a0 e0 ef ff ff     ddw        _start                                           (FDE) PcBegin
        001020a4 2b 00 00        dq         2Bh                                              (FDE) PcRange
                 00 00 00 
                 00 00
        001020ac 00              uleb128    0h                                               (FDE) Augmentation Data Length
        001020ad 00 00 00        db[3]                                                       (FDE) Call Frame Instructions
                             **************************************************************
                             * Common Information Entry                                   *
                             **************************************************************
                             cie_001020b0                                    XREF[6]:     001020cc(*), 001020f4(*), 
                                                                                          0010210c(*), 00102128(*), 
                                                                                          0010214c(*), 00102194(*)  
        001020b0 14 00 00 00     ddw        14h                                              (CIE) Length
        001020b4 00 00 00 00     ddw        0h                                               (CIE) ID
        001020b8 01              db         1h                                               (CIE) Version
        001020b9 7a 52 00        ds         "zR"                                             (CIE) Augmentation String
        001020bc 01              uleb128    1h                                               (CIE) Code Alignment
        001020bd 78              sleb128    -8h                                              (CIE) Data Alignment
        001020be 10              db         10h                                              (CIE) Return Address Register Co
        001020bf 01              uleb128    1h                                               (CIE) Augmentation Data Length
        001020c0 1b              dwfenc     DW_EH_PE_sdata4 | DW_EH_PE_pcrel                 (CIE Augmentation Data) FDE Enco
        001020c1 0c 07 08        db[7]                                                       (CIE) Initial Instructions
                 90 01 00 00
                             **************************************************************
                             * Frame Descriptor Entry                                     *
                             **************************************************************
                             fde_001020c8                                    XREF[1]:     0010204c(*)  
        001020c8 24 00 00 00     ddw        24h                                              (FDE) Length
        001020cc 1c 00 00 00     ddw        cie_001020b0                                     (FDE) CIE Reference Pointer 
        001020d0 50 ef ff ff     ddw        FUN_00101020                                     (FDE) PcBegin
        001020d4 50 00 00 00     ddw        50h                                              (FDE) PcRange
        001020d8 00              uleb128    0h                                               (FDE) Augmentation Data Length
        001020d9 0e 10 46        db[23]                                                      (FDE) Call Frame Instructions
                 0e 18 4a 
                 0f 0b 77 
                             **************************************************************
                             * Frame Descriptor Entry                                     *
                             **************************************************************
                             fde_001020f0                                    XREF[1]:     00102054(*)  
        001020f0 14 00 00 00     ddw        14h                                              (FDE) Length
        001020f4 44 00 00 00     ddw        cie_001020b0                                     (FDE) CIE Reference Pointer 
        001020f8 78 ef ff ff     ddw        <EXTERNAL>::__cxa_finalize                       (FDE) PcBegin
        001020fc 08 00 00        dq         8h                                               (FDE) PcRange
                 00 00 00 
                 00 00
        00102104 00              uleb128    0h                                               (FDE) Augmentation Data Length
        00102105 00 00 00        db[3]                                                       (FDE) Call Frame Instructions
                             **************************************************************
                             * Frame Descriptor Entry                                     *
                             **************************************************************
                             fde_00102108                                    XREF[1]:     00102064(*)  
        00102108 18 00 00 00     ddw        18h                                              (FDE) Length
        0010210c 5c 00 00 00     ddw        cie_001020b0                                     (FDE) CIE Reference Pointer 
        00102110 7a f0 ff ff     ddw        usage                                            (FDE) PcBegin
        00102114 3a 00 00 00     ddw        3Ah                                              (FDE) PcRange
        00102118 00              uleb128    0h                                               (FDE) Augmentation Data Length
        00102119 41 0e 10        db[11]                                                      (FDE) Call Frame Instructions
                 86 02 43 
                 0d 06 00 
                             **************************************************************
                             * Frame Descriptor Entry                                     *
                             **************************************************************
                             fde_00102124                                    XREF[1]:     0010206c(*)  
        00102124 20 00 00 00     ddw        20h                                              (FDE) Length
        00102128 78 00 00 00     ddw        cie_001020b0                                     (FDE) CIE Reference Pointer 
        0010212c 98 f0 ff ff     ddw        main                                             (FDE) PcBegin
        00102130 a9 00 00 00     ddw        A9h                                              (FDE) PcRange
        00102134 00              uleb128    0h                                               (FDE) Augmentation Data Length
        00102135 41 0e 10        db[19]                                                      (FDE) Call Frame Instructions
                 86 02 43 
                 0d 06 02 
                             **************************************************************
                             * Frame Descriptor Entry                                     *
                             **************************************************************
                             fde_00102148                                    XREF[1]:     00102074(*)  
        00102148 44 00 00 00     ddw        44h                                              (FDE) Length
        0010214c 9c 00 00 00     ddw        cie_001020b0                                     (FDE) CIE Reference Pointer 
        00102150 20 f1 ff ff     ddw        __libc_csu_init                                  (FDE) PcBegin
        00102154 65 00 00 00     ddw        65h                                              (FDE) PcRange
        00102158 00              uleb128    0h                                               (FDE) Augmentation Data Length
        00102159 42 0e 10        db[55]                                                      (FDE) Call Frame Instructions
                 8f 02 42 
                 0e 18 8e 
                             **************************************************************
                             * Frame Descriptor Entry                                     *
                             **************************************************************
                             fde_00102190                                    XREF[1]:     0010207c(*)  
        00102190 10 00 00 00     ddw        10h                                              (FDE) Length
        00102194 e4 00 00 00     ddw        cie_001020b0                                     (FDE) CIE Reference Pointer 
        00102198 48 f1 ff ff     ddw        __libc_csu_fini                                  (FDE) PcBegin
        0010219c 02 00 00        dq         2h                                               (FDE) PcRange
                 00 00 00 
                 00 00
                             **************************************************************
                             * END OF FRAME                                               *
                             **************************************************************
                             __FRAME_END__
        001021a4 00 00 00 00     ddw        0h                                               End of Frame
                             //
                             // .init_array 
                             // SHT_INIT_ARRAY  [0x3de8 - 0x3def]
                             // ram:00103de8-ram:00103def
                             //
                             __DT_INIT_ARRAY                                 XREF[6]:     00100168(*), 00100280(*), 
                             __init_array_start                                           __libc_csu_init:0010127b(*), 
                             __frame_dummy_init_array_entry                               __libc_csu_init:001012b9(R), 
                                                                                          00103e30(*), 
                                                                                          _elfSectionHeaders::000004d0(*)  
        00103de8 80 11 10        addr       frame_dummy
                 00 00 00 
                 00 00
                             //
                             // .fini_array 
                             // SHT_FINI_ARRAY  [0x3df0 - 0x3df7]
                             // ram:00103df0-ram:00103df7
                             //
                             __DT_FINI_ARRAY                                 XREF[4]:     __libc_csu_init:00101283(*), 
                             __init_array_end                                             __libc_csu_init:001012b9(R), 
                             __do_global_dtors_aux_fini_array_entry                       00103e50(*), 
                                                                                          _elfSectionHeaders::00000510(*)  
        00103df0 40 11 10        addr       __do_global_dtors_aux
                 00 00 00 
                 00 00
                             //
                             // .dynamic 
                             // SHT_DYNAMIC  [0x3df8 - 0x3fd7]
                             // ram:00103df8-ram:00103fd7
                             //
                             _DYNAMIC                                        XREF[3]:     001001a0(*), 00104000(*), 
                                                                                          _elfSectionHeaders::00000550(*)  
        00103df8 01 00 00        Elf64_Dy                                                    DT_NEEDED - Name of needed library
                 00 00 00 
                 00 00 01 
        00103f98 00              ??         00h
        00103f99 00              ??         00h
        00103f9a 00              ??         00h
        00103f9b 00              ??         00h
        00103f9c 00              ??         00h
        00103f9d 00              ??         00h
        00103f9e 00              ??         00h
        00103f9f 00              ??         00h
        00103fa0 00              ??         00h
        00103fa1 00              ??         00h
        00103fa2 00              ??         00h
        00103fa3 00              ??         00h
        00103fa4 00              ??         00h
        00103fa5 00              ??         00h
        00103fa6 00              ??         00h
        00103fa7 00              ??         00h
        00103fa8 00              ??         00h
        00103fa9 00              ??         00h
        00103faa 00              ??         00h
        00103fab 00              ??         00h
        00103fac 00              ??         00h
        00103fad 00              ??         00h
        00103fae 00              ??         00h
        00103faf 00              ??         00h
        00103fb0 00              ??         00h
        00103fb1 00              ??         00h
        00103fb2 00              ??         00h
        00103fb3 00              ??         00h
        00103fb4 00              ??         00h
        00103fb5 00              ??         00h
        00103fb6 00              ??         00h
        00103fb7 00              ??         00h
        00103fb8 00              ??         00h
        00103fb9 00              ??         00h
        00103fba 00              ??         00h
        00103fbb 00              ??         00h
        00103fbc 00              ??         00h
        00103fbd 00              ??         00h
        00103fbe 00              ??         00h
        00103fbf 00              ??         00h
        00103fc0 00              ??         00h
        00103fc1 00              ??         00h
        00103fc2 00              ??         00h
        00103fc3 00              ??         00h
        00103fc4 00              ??         00h
        00103fc5 00              ??         00h
        00103fc6 00              ??         00h
        00103fc7 00              ??         00h
        00103fc8 00              ??         00h
        00103fc9 00              ??         00h
        00103fca 00              ??         00h
        00103fcb 00              ??         00h
        00103fcc 00              ??         00h
        00103fcd 00              ??         00h
        00103fce 00              ??         00h
        00103fcf 00              ??         00h
        00103fd0 00              ??         00h
        00103fd1 00              ??         00h
        00103fd2 00              ??         00h
        00103fd3 00              ??         00h
        00103fd4 00              ??         00h
        00103fd5 00              ??         00h
        00103fd6 00              ??         00h
        00103fd7 00              ??         00h
                             //
                             // .got 
                             // SHT_PROGBITS  [0x3fd8 - 0x3fff]
                             // ram:00103fd8-ram:00103fff
                             //
                             PTR__ITM_deregisterTMCloneTable_00103fd8        XREF[2]:     deregister_tm_clones:001010c7(R), 
                                                                                          _elfSectionHeaders::00000590(*)  
        00103fd8 00 50 10        addr       <EXTERNAL>::_ITM_deregisterTMCloneTable          = ??
                 00 00 00 
                 00 00
                             PTR___libc_start_main_00103fe0                  XREF[1]:     _start:001010a4(R)  
        00103fe0 20 50 10        addr       <EXTERNAL>::__libc_start_main                    = ??
                 00 00 00 
                 00 00
                             PTR___gmon_start___00103fe8                     XREF[1]:     _init:00101004(R)  
        00103fe8 28 50 10        addr       <EXTERNAL>::__gmon_start__                       = ??
                 00 00 00 
                 00 00
                             PTR__ITM_registerTMCloneTable_00103ff0          XREF[1]:     register_tm_clones:00101118(R)  
        00103ff0 38 50 10        addr       <EXTERNAL>::_ITM_registerTMCloneTable            = ??
                 00 00 00 
                 00 00
                             PTR___cxa_finalize_00103ff8                     XREF[2]:     __cxa_finalize:00101070, 
                                                                                          __do_global_dtors_aux:00101149(R
        00103ff8 40 50 10        addr       <EXTERNAL>::__cxa_finalize                       = ??
                 00 00 00 
                 00 00
                             //
                             // .got.plt 
                             // SHT_PROGBITS  [0x4000 - 0x4037]
                             // ram:00104000-ram:00104037
                             //
                             __DT_PLTGOT                                     XREF[2]:     00103ed0(*), 
                             _GLOBAL_OFFSET_TABLE_                                        _elfSectionHeaders::000005d0(*)  
        00104000 f8 3d 10        addr       _DYNAMIC
                 00 00 00 
                 00 00
                             PTR_00104008                                    XREF[1]:     FUN_00101020:00101020(R)  
        00104008 00 00 00        addr       00000000
                 00 00 00 
                 00 00
                             PTR_00104010                                    XREF[1]:     FUN_00101020:00101026  
        00104010 00 00 00        addr       00000000
                 00 00 00 
                 00 00
                             PTR_puts_00104018                               XREF[1]:     puts:00101030  
        00104018 08 50 10        addr       <EXTERNAL>::puts                                 = ??
                 00 00 00 
                 00 00
                             PTR_strlen_00104020                             XREF[1]:     strlen:00101040  
        00104020 10 50 10        addr       <EXTERNAL>::strlen                               = ??
                 00 00 00 
                 00 00
                             PTR_printf_00104028                             XREF[1]:     printf:00101050  
        00104028 18 50 10        addr       <EXTERNAL>::printf                               = ??
                 00 00 00 
                 00 00
                             DAT_00104030                                    XREF[1]:     exit:00101060  
        00104030 30              ??         30h    0                                         ?  ->  00105030
        00104031 50              ??         50h    P
        00104032 10              ??         10h
        00104033 00              ??         00h
        00104034 00              ??         00h
        00104035 00              ??         00h
        00104036 00              ??         00h
        00104037 00              ??         00h
                             //
                             // .data 
                             // SHT_PROGBITS  [0x4038 - 0x4047]
                             // ram:00104038-ram:00104047
                             //
                             __data_start                                    XREF[2]:     Entry Point(*), 
                             data_start                                                   _elfSectionHeaders::00000610(*)  
        00104038 00              ??         00h
        00104039 00              ??         00h
        0010403a 00              ??         00h
        0010403b 00              ??         00h
        0010403c 00              ??         00h
        0010403d 00              ??         00h
        0010403e 00              ??         00h
        0010403f 00              ??         00h
                             __dso_handle                                    XREF[3]:     Entry Point(*), 
                                                                                          __do_global_dtors_aux:00101157(R
                                                                                          00104040(*)  
        00104040 40 40 10        addr       __dso_handle                                     = 00104040
                 00 00 00 
                 00 00
                             //
                             // .bss 
                             // SHT_NOBITS  [0x4048 - 0x404f]
                             // ram:00104048-ram:0010404f
                             //
                             _edata                                          XREF[8]:     Entry Point(*), 
                             __bss_start                                                  deregister_tm_clones:001010b0(*), 
                             __TMC_END__                                                  deregister_tm_clones:001010b8(*), 
                             completed.7090                                               register_tm_clones:001010f0(*), 
                                                                                          register_tm_clones:001010f7(*), 
                                                                                          __do_global_dtors_aux:00101140(R
                                                                                          __do_global_dtors_aux:00101168(W
                                                                                          _elfSectionHeaders::00000650(*)  
        00104048                 undefined1 ??
        00104049                 ??         ??
        0010404a                 ??         ??
        0010404b                 ??         ??
        0010404c                 ??         ??
        0010404d                 ??         ??
        0010404e                 ??         ??
        0010404f                 ??         ??
                             //
                             // EXTERNAL 
                             // NOTE: This block is artificial and allows ELF Relocations 
                             // ram:00105000-ram:00105047
                             //
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk undefined _ITM_deregisterTMCloneTable()
                               Thunked-Function: <EXTERNAL>::_ITM_deregi
             undefined         AL:1           <RETURN>
                             <EXTERNAL>::_ITM_deregisterTMCloneTable         XREF[3]:     deregister_tm_clones:001010c7(*), 
                                                                                          deregister_tm_clones:001010d4(c), 
                                                                                          00103fd8(*)  
        00105000                 ??         ??
        00105001                 ??         ??
        00105002                 ??         ??
        00105003                 ??         ??
        00105004                 ??         ??
        00105005                 ??         ??
        00105006                 ??         ??
        00105007                 ??         ??
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk int puts(char * __s)
                               Thunked-Function: <EXTERNAL>::puts
             int               EAX:4          <RETURN>
             char *            RDI:8          __s
                             puts@@GLIBC_2.2.5
                             <EXTERNAL>::puts                                XREF[2]:     puts:00101030(T), 
                                                                                          puts:00101030(c), 00104018(*)  
        00105008                 ??         ??
        00105009                 ??         ??
        0010500a                 ??         ??
        0010500b                 ??         ??
        0010500c                 ??         ??
        0010500d                 ??         ??
        0010500e                 ??         ??
        0010500f                 ??         ??
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk size_t strlen(char * __s)
                               Thunked-Function: <EXTERNAL>::strlen
             size_t            RAX:8          <RETURN>
             char *            RDI:8          __s
                             strlen@@GLIBC_2.2.5
                             <EXTERNAL>::strlen                              XREF[2]:     strlen:00101040(T), 
                                                                                          strlen:00101040(c), 00104020(*)  
        00105010                 ??         ??
        00105011                 ??         ??
        00105012                 ??         ??
        00105013                 ??         ??
        00105014                 ??         ??
        00105015                 ??         ??
        00105016                 ??         ??
        00105017                 ??         ??
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk int printf(char * __format, ...)
                               Thunked-Function: <EXTERNAL>::printf
             int               EAX:4          <RETURN>
             char *            RDI:8          __format
                             printf@@GLIBC_2.2.5
                             <EXTERNAL>::printf                              XREF[2]:     printf:00101050(T), 
                                                                                          printf:00101050(c), 00104028(*)  
        00105018                 ??         ??
        00105019                 ??         ??
        0010501a                 ??         ??
        0010501b                 ??         ??
        0010501c                 ??         ??
        0010501d                 ??         ??
        0010501e                 ??         ??
        0010501f                 ??         ??
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk undefined __libc_start_main()
                               Thunked-Function: <EXTERNAL>::__libc_star
             undefined         AL:1           <RETURN>
                             __libc_start_main@@GLIBC_2.2.5
                             <EXTERNAL>::__libc_start_main                   XREF[2]:     _start:001010a4(c), 00103fe0(*)  
        00105020                 ??         ??
        00105021                 ??         ??
        00105022                 ??         ??
        00105023                 ??         ??
        00105024                 ??         ??
        00105025                 ??         ??
        00105026                 ??         ??
        00105027                 ??         ??
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk undefined __gmon_start__()
                               Thunked-Function: <EXTERNAL>::__gmon_star
             undefined         AL:1           <RETURN>
                             <EXTERNAL>::__gmon_start__                      XREF[3]:     _init:00101004(*), 
                                                                                          _init:00101010(c), 00103fe8(*)  
        00105028                 ??         ??
        00105029                 ??         ??
        0010502a                 ??         ??
        0010502b                 ??         ??
        0010502c                 ??         ??
        0010502d                 ??         ??
        0010502e                 ??         ??
        0010502f                 ??         ??
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk noreturn void exit(int __status)
                               Thunked-Function: <EXTERNAL>::exit
             void              <VOID>         <RETURN>
             int               EDI:4          __status
                             exit@@GLIBC_2.2.5
                             <EXTERNAL>::exit                                XREF[1]:     exit:00101060(T), 
                                                                                          exit:00101060(c)  
        00105030                 ??         ??
        00105031                 ??         ??
        00105032                 ??         ??
        00105033                 ??         ??
        00105034                 ??         ??
        00105035                 ??         ??
        00105036                 ??         ??
        00105037                 ??         ??
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk undefined _ITM_registerTMCloneTable()
                               Thunked-Function: <EXTERNAL>::_ITM_regist
             undefined         AL:1           <RETURN>
                             <EXTERNAL>::_ITM_registerTMCloneTable           XREF[3]:     register_tm_clones:00101118(*), 
                                                                                          register_tm_clones:00101125(c), 
                                                                                          00103ff0(*)  
        00105038                 ??         ??
        00105039                 ??         ??
        0010503a                 ??         ??
        0010503b                 ??         ??
        0010503c                 ??         ??
        0010503d                 ??         ??
        0010503e                 ??         ??
        0010503f                 ??         ??
                             **************************************************************
                             *                       THUNK FUNCTION                       *
                             **************************************************************
                             thunk undefined __cxa_finalize()
                               Thunked-Function: <EXTERNAL>::__cxa_final
             undefined         AL:1           <RETURN>
                             __cxa_finalize@@GLIBC_2.2.5
                             <EXTERNAL>::__cxa_finalize                      XREF[2]:     __cxa_finalize:00101070(T), 
                                                                                          __cxa_finalize:00101070(c), 
                                                                                          00103ff8(*)  
        00105040                 ??         ??
        00105041                 ??         ??
        00105042                 ??         ??
        00105043                 ??         ??
        00105044                 ??         ??
        00105045                 ??         ??
        00105046                 ??         ??
        00105047                 ??         ??
                             //
                             // .comment 
                             // SHT_PROGBITS [not-loaded]
                             // .comment::00000000-.comment::0000001c
                             //
             assume DF = <UNKNOWN>
                             ElfComment[0]                                   XREF[1]:     _elfSectionHeaders::00000690(*)  
     t::00000000 47 43 43        utf8       u8"GCC: (Debian 7.3.0-25) 7.3.0"
                 3a 20 28 
                 44 65 62 
                             //
                             // .shstrtab 
                             // SHT_STRTAB [not-loaded]
                             // .shstrtab::00000000-.shstrtab::00000106
                             //
                             DAT_.shstrtab__00000000                         XREF[1]:     _elfSectionHeaders::00000750(*)  
     b::00000000 00              ??         00h
     b::00000001 2e 73 79        utf8       u8".symtab"
                 6d 74 61 
                 62 00
     b::00000009 2e 73 74        utf8       u8".strtab"
                 72 74 61 
                 62 00
     b::00000011 2e 73 68        utf8       u8".shstrtab"
                 73 74 72 
                 74 61 62 00
     b::0000001b 2e 69 6e        utf8       u8".interp"
                 74 65 72 
                 70 00
     b::00000023 2e 6e 6f        utf8       u8".note.ABI-tag"
                 74 65 2e 
                 41 42 49 
     b::00000031 2e 6e 6f        utf8       u8".note.gnu.build-id"
                 74 65 2e 
                 67 6e 75 
     b::00000044 2e 67 6e        utf8       u8".gnu.hash"
                 75 2e 68 
                 61 73 68 00
     b::0000004e 2e 64 79        utf8       u8".dynsym"
                 6e 73 79 
                 6d 00
     b::00000056 2e 64 79        utf8       u8".dynstr"
                 6e 73 74 
                 72 00
     b::0000005e 2e 67 6e        utf8       u8".gnu.version"
                 75 2e 76 
                 65 72 73 
     b::0000006b 2e 67 6e        utf8       u8".gnu.version_r"
                 75 2e 76 
                 65 72 73 
     b::0000007a 2e 72 65        utf8       u8".rela.dyn"
                 6c 61 2e 
                 64 79 6e 00
     b::00000084 2e 72 65        utf8       u8".rela.plt"
                 6c 61 2e 
                 70 6c 74 00
     b::0000008e 2e 69 6e        utf8       u8".init"
                 69 74 00
     b::00000094 2e 70 6c        utf8       u8".plt.got"
                 74 2e 67 
                 6f 74 00
     b::0000009d 2e 74 65        utf8       u8".text"
                 78 74 00
     b::000000a3 2e 66 69        utf8       u8".fini"
                 6e 69 00
     b::000000a9 2e 72 6f        utf8       u8".rodata"
                 64 61 74 
                 61 00
     b::000000b1 2e 65 68        utf8       u8".eh_frame_hdr"
                 5f 66 72 
                 61 6d 65 
     b::000000bf 2e 65 68        utf8       u8".eh_frame"
                 5f 66 72 
                 61 6d 65 00
     b::000000c9 2e 69 6e        utf8       u8".init_array"
                 69 74 5f 
                 61 72 72 
     b::000000d5 2e 66 69        utf8       u8".fini_array"
                 6e 69 5f 
                 61 72 72 
     b::000000e1 2e 64 79        utf8       u8".dynamic"
                 6e 61 6d 
                 69 63 00
     b::000000ea 2e 67 6f        utf8       u8".got.plt"
                 74 2e 70 
                 6c 74 00
     b::000000f3 2e 64 61        utf8       u8".data"
                 74 61 00
     b::000000f9 2e 62 73        utf8       u8".bss"
                 73 00
     b::000000fe 2e 63 6f        utf8       u8".comment"
                 6d 6d 65 
                 6e 74 00
                             //
                             // .strtab 
                             // SHT_STRTAB [not-loaded]
                             // .strtab::00000000-.strtab::00000243
                             //
                             DAT_.strtab__00000000                           XREF[1]:     _elfSectionHeaders::00000710(*)  
     b::00000000 00              ??         00h
     b::00000001 63 72 74        utf8       u8"crtstuff.c"
                 73 74 75 
                 66 66 2e 
     b::0000000c 64 65 72        utf8       u8"deregister_tm_clones"
                 65 67 69 
                 73 74 65 
     b::00000021 5f 5f 64        utf8       u8"__do_global_dtors_aux"
                 6f 5f 67 
                 6c 6f 62 
     b::00000037 63 6f 6d        utf8       u8"completed.7090"
                 70 6c 65 
                 74 65 64 
     b::00000046 5f 5f 64        utf8       u8"__do_global_dtors_aux_fini_array_entry"
                 6f 5f 67 
                 6c 6f 62 
     b::0000006d 66 72 61        utf8       u8"frame_dummy"
                 6d 65 5f 
                 64 75 6d 
     b::00000079 5f 5f 66        utf8       u8"__frame_dummy_init_array_entry"
                 72 61 6d 
                 65 5f 64 
     b::00000098 72 65 76        utf8       u8"rev_50.c"
                 5f 35 30 
                 2e 63 00
     b::000000a1 5f 5f 46        utf8       u8"__FRAME_END__"
                 52 41 4d 
                 45 5f 45 
     b::000000af 5f 5f 69        utf8       u8"__init_array_end"
                 6e 69 74 
                 5f 61 72 
     b::000000c0 5f 44 59        utf8       u8"_DYNAMIC"
                 4e 41 4d 
                 49 43 00
     b::000000c9 5f 5f 69        utf8       u8"__init_array_start"
                 6e 69 74 
                 5f 61 72 
     b::000000dc 5f 5f 47        utf8       u8"__GNU_EH_FRAME_HDR"
                 4e 55 5f 
                 45 48 5f 
     b::000000ef 5f 47 4c        utf8       u8"_GLOBAL_OFFSET_TABLE_"
                 4f 42 41 
                 4c 5f 4f 
     b::00000105 5f 5f 6c        utf8       u8"__libc_csu_fini"
                 69 62 63 
                 5f 63 73 
     b::00000115 5f 49 54        utf8       u8"_ITM_deregisterTMCloneTable"
                 4d 5f 64 
                 65 72 65 
     b::00000131 70 75 74        utf8       u8"puts@@GLIBC_2.2.5"
                 73 40 40 
                 47 4c 49 
     b::00000143 5f 65 64        utf8       u8"_edata"
                 61 74 61 00
     b::0000014a 73 74 72        utf8       u8"strlen@@GLIBC_2.2.5"
                 6c 65 6e 
                 40 40 47 
     b::0000015e 70 72 69        utf8       u8"printf@@GLIBC_2.2.5"
                 6e 74 66 
                 40 40 47 
     b::00000172 5f 5f 6c        utf8       u8"__libc_start_main@@GLIBC_2.2.5"
                 69 62 63 
                 5f 73 74 
     b::00000191 5f 5f 64        utf8       u8"__data_start"
                 61 74 61 
                 5f 73 74 
     b::0000019e 5f 5f 67        utf8       u8"__gmon_start__"
                 6d 6f 6e 
                 5f 73 74 
     b::000001ad 5f 5f 64        utf8       u8"__dso_handle"
                 73 6f 5f 
                 68 61 6e 
     b::000001ba 5f 49 4f        utf8       u8"_IO_stdin_used"
                 5f 73 74 
                 64 69 6e 
     b::000001c9 5f 5f 6c        utf8       u8"__libc_csu_init"
                 69 62 63 
                 5f 63 73 
     b::000001d9 5f 5f 62        utf8       u8"__bss_start"
                 73 73 5f 
                 73 74 61 
     b::000001e5 6d 61 69        utf8       u8"main"
                 6e 00
     b::000001ea 75 73 61        utf8       u8"usage"
                 67 65 00
     b::000001f0 65 78 69        utf8       u8"exit@@GLIBC_2.2.5"
                 74 40 40 
                 47 4c 49 
     b::00000202 5f 5f 54        utf8       u8"__TMC_END__"
                 4d 43 5f 
                 45 4e 44 
     b::0000020e 5f 49 54        utf8       u8"_ITM_registerTMCloneTable"
                 4d 5f 72 
                 65 67 69 
     b::00000228 5f 5f 63        utf8       u8"__cxa_finalize@@GLIBC_2.2.5"
                 78 61 5f 
                 66 69 6e 
                             //
                             // .symtab 
                             // SHT_SYMTAB [not-loaded]
                             // .symtab::00000000-.symtab::0000065f
                             //
                             Elf64_Sym_ARRAY_.symtab__00000000               XREF[1]:     _elfSectionHeaders::000006d0(*)  
     b::00000000 00 00 00        Elf64_Sy
                 00 00 00 
                 00 00 00 
                             //
                             // _elfSectionHeaders 
                             // Elf Section Headers
                             // _elfSectionHeaders::00000000-_elfSectionHeaders::0000077f
                             //
                             Elf64_Shdr_ARRAY__elfSectionHeaders__00000000   XREF[1]:     00100028(*)  
     s::00000000 00 00 00        Elf64_Sh                                                    SECTION0 - SHT_NULL
                 00 00 00 
                 00 00 00 
